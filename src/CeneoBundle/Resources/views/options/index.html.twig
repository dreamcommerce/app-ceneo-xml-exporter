{% extends 'DreamCommerceShopAppstoreBundle::base.html.twig' %}

{% block body %}


    <main class="rwd-layout-width rwd-layout-container">
        <section class="rwd-layout-col-12">
            <fieldset>
                <header>{{ 'app.title'|trans }}</header>

                <div class="edition-form-line">
                    <div class="edition-form-line-label">
                        {{ 'export.status'|trans }}:
                    </div>
                    <div class="edition-form-line-field">
                        {% if export_status.date is not empty %}
                            <strong>{{ export_status.date|date('Y-m-d @ H:i:s') }}</strong> ({{ 'export.status.count'|trans({'%count%': export_status.productsCount, '%seconds%': export_status.seconds}) }})
                        {% else %}
                            {{ 'export.none'|trans }}
                        {% endif %}

                        <span id="in-progress" class="{% if export_status.inProgress %}in-progress{% endif %}">
                            <span>{{ 'job.in_progress'|trans }}</span>
                            <button class="button button-important button-bg" type="button" data-url="{{ enqueue_link|raw }}" id="generate-xml">{{ 'xml.generate'|trans }}</button>
                        </span>
                    </div>
                </div>

                <div class="edition-form-line">
                    <div class="edition-form-line-label">
                        {{ 'xml.link'|trans }}:
                    </div>
                    <div class="edition-form-line-field">
                        {% if xml_link is empty %}
                            <input type="text" id="xml-link" value="{{ 'no_export'|trans }}" readonly="readonly">
                        {% else %}
                            {% if export_status.inProgress %}
                                <input type="text" id="xml-link" value="{{ 'exporting'|trans }}" readonly="readonly">
                            {% else %}
                                <input type="text" id="xml-link" value="{{ xml_link }}" readonly="readonly">
                            {% endif %}
                        {% endif %}
                    </div>
                </div>

            </fieldset>
            <fieldset>
                <header>{{ 'excluded.products'|trans }}</header>

                {% if excluded_count > 0 %}
                    <p>{{ 'excluded.products.count'|trans({'%count%': excluded_count}) }}. <a href="{{ app_path('ceneo_exclusions') }}">{{ 'excluded.products.manage'|trans }}</a></p>
                {% else %}
                    <p>{{ 'excluded.products.empty'|trans }}</p>
                {% endif %}

                <p>{{ 'excluded.products.tip'|trans({'%link%': '<a href="' ~ stock_link ~ '" target="_top">' ~ ('stock.link'|trans) ~ '</a>'})|raw }}
                    </p>

            </fieldset>
            <fieldset>
                <header>{{ 'attributes.mapping'|trans }}</header>
                <p>{{ 'go.to'|trans({'%link%': '<a href="' ~app_path("ceneo_mappings") ~ '">' ~ ('go.to.mapping'|trans) ~ '</a>'}) | raw }}</p>
            </fieldset>

        </section>
    </main>

    <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>

    <script>
        $(function(){

            var $button = $('#generate-xml');

            var $progress = $('#in-progress');

            var $xmlLink = $('#xml-link');

            var showProgress = function() {
                app.progressBar({
                    onFinishAlert: '{{ 'finished'|trans }}',
                    title: '{{ 'importing'|trans}}'
                });
            };

            /**
             * format seconds to H:i:s format string
             * @link http://stackoverflow.com/questions/6312993/javascript-seconds-to-time-string-with-format-hhmmss
             * @param time {Number}
             * @returns {string}
             */
            var secondsToTimeString = function(time){
                var sec_num = parseInt(time, 10); // don't forget the second param
                var hours   = Math.floor(sec_num / 3600);
                var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
                var seconds = sec_num - (hours * 3600) - (minutes * 60);

                if (hours   < 10) {hours   = "0"+hours;}
                if (minutes < 10) {minutes = "0"+minutes;}
                if (seconds < 10) {seconds = "0"+seconds;}
                return hours+':'+minutes+':'+seconds;
            };


            var runChecker = function(){
                $.getJSON('{{ status_link|raw }}').then(function(data){

                    if(data.exported) {

                        app.progressBar.setStep({
                            value: (data.exported / data.productsCount) * 100,
                            msg: data.exported +
                            '/' +
                            data.productsCount +
                            ', ETA: ' +
                            secondsToTimeString(data.eta)
                        });
                    }else{
                        app.progressBar.setStep({
                            value: 0,
                            msg: '{{ 'queue'|trans }}'
                        });
                    }


                    if(data.inProgress){
                        setTimeout(runChecker, 10000);
                    }else{
                        app.progressBar.setStep({
                            value: 100
                        });
                        self.location.reload();
                    }
                })
            };

            $button.click(function(e){

                $.getJSON('{{ enqueue_link|raw }}').then(function(data){
                    if(!data.ok){
                        app.flashMessage({
                            msg : '{{ 'job.in_progress'|trans }}',
                            type : 'error'
                        });

                    }else{
                        showProgress();
                        app.flashMessage({
                            msg : '{{ 'job.scheduled'|trans }}',
                            type : 'notice'
                        });
                    }

                });

                $progress.addClass('in-progress');
                setTimeout(runChecker, 10000);
            });

            {% if export_status.inProgress %}
                events.push(function(){
                    showProgress();
                    runChecker();
                });
            {% endif %}
        });

    </script>

    <style>
        #in-progress span{
            display: none;
            color: #696969;
            font-style: italic;
            padding-left: 1em;
        }

        #in-progress.in-progress span{
            display: inline-block;
        }

        #in-progress.in-progress button{
            display: none;
        }
    </style>

{% endblock %}
